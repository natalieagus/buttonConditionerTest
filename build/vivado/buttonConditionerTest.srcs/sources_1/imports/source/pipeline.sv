/*
    This file was generated automatically by Alchitry Labs 2.0.16-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/
module pipeline #(
    parameter DEPTH = 2'h3
  ) (
    input clk,
    input in,
    output reg out
  );
  
  reg [(DEPTH)-1:0] D_pipe_d, D_pipe_q = 0;
  
  reg [(32):0] R_6df86d46_i, RR_6df86d46_i;
  
  
  always @* begin
    D_pipe_d = D_pipe_q;
    
    D_pipe_d[(1'h0)] = in;
    out = D_pipe_q[($bits(D_pipe_q) - 1'h1)];
    for (RR_6df86d46_i = 0; RR_6df86d46_i < DEPTH - 1'h1; RR_6df86d46_i = RR_6df86d46_i + 1) begin
      R_6df86d46_i = (0) + RR_6df86d46_i * (1);
      D_pipe_d[(R_6df86d46_i + 1'h1)] = D_pipe_q[(R_6df86d46_i)];
    end
  end
  
  always @(posedge (clk)) begin
    D_pipe_q <= D_pipe_d;
    
  end
endmodule